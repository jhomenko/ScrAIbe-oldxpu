[build-system]
requires = ["poetry-core>=1.8.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "scraibe"
version = "0.0.0" # Will be set by poetry-dynamic-versioning
description = "Transcription tool for audio files based on Whisper and Pyannote"
authors = ["Schmieder, Jacob <jacob.schmieder@dbfz.de>"]
license = "GPL-3.0-or-later"
readme = ["README.md", "LICENSE"]
repository = "https://github.com/JSchmie/ScAIbe"
documentation = "https://jschmie.github.io/ScrAIbe/"
keywords = ["transcription", "audio", "whisper", "pyannote", "speech-to-text", "speech-recognition"]
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Environment :: GPU :: NVIDIA CUDA :: 12 :: 12.1',
    'Topic :: Scientific/Engineering :: Artificial Intelligence'
]
packages = [{include = "scraibe"}]
exclude =[
    "__pycache__",
    "*.pyc",
    "test"
]

[tool.poetry.dependencies]
python = "^3.11" # Or ^3.11 as per ipex-llm quickstart

# Core application dependencies
tqdm = "^4.66.5"
numpy = "^1.26.4"
openai-whisper = ">=20231117,<20240931"
faster-whisper = "^1.0.3"
"pyannote.audio" = ">=3.1.0"

# --- PyTorch Stack for IPEX-LLM [xpu_2.6] ---
# Target IPEX 2.6.10+xpu and a compatible PyTorch 2.6.x XPU version.
# The exact PyTorch XPU version string (e.g., "==2.6.0")
# needs to be available from the "pytorch-xpu" source.
# Using explicit source assignment for these critical XPU packages.
#torch = { version = ">=2.6.0,<2.7.0", source = "pytorch-xpu" }
#torchaudio = { version = ">=2.6.0,<2.7.0", source = "pytorch-xpu" }
#intel-extension-for-pytorch = { version = "==2.6.10+xpu", source = "intel" }
# oneccl_bind_pt = { version = ">=2.6.0,<2.7.0", source = "intel" } # Add if needed

# --- IPEX-LLM ---
#ipex-llm = { version = ">=2.3.0rc1", extras = ["xpu_2.6"] }

# --- Dependencies potentially pinned by ipex-llm ---
transformers = "==4.37.0"
tokenizers = "==0.15.2"
accelerate = "==0.23.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
strict = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base) }}
    {%- elif branch == 'develop' -%}
        {{ serialize_pep440(bump_version(base), dev = distance) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""

[tool.poetry.group.docs.dependencies]
sphinx = "^7.3.7"
sphinx-rtd-theme = ">=2,<4"
markdown-it-py = {version = "~3.0.0", extras = ["plugins"]}
myst-parser = "^3.0.1"
mdit-py-plugins = "^0.4.1"

[tool.poetry.scripts]
scraibe = "scraibe.cli:cli"

# Source definitions for Poetry
#[[tool.poetry.source]]
#name = "pytorch-xpu"
#url = "https://download.pytorch.org/whl/xpu/"
#priority = "explicit"

#[[tool.poetry.source]]
#name = "intel"
#url = "https://pytorch-extension.intel.com/release-whl/stable/xpu/us/"
#priority = "explicit"

# PyPI is typically used by default by Poetry if a package isn't found in other defined sources.
# You can add it explicitly if needed, e.g.:
# [[source]]
# name = "PyPI"
# priority = "supplemental" # or "default" if it's the primary one and others are secondary.

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["E402","F403",'F401']
"scraibe/misc.py" = ["E722"]